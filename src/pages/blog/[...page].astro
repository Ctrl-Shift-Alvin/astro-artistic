---
import PaginationButtons from '@/components/astro-components/PaginationButtons.astro';
import Section from '@/components/astro-components/Section.astro';
import { BlogGallery } from '@/components/partials/BlogGallery';
import { type TBlogMarkdownInstance } from '@/components/types';
import { GlobalTranslation } from '@/locales/global';
import Base from '@/templates/Base.astro';
import { getSortedBlogs } from '@/backend/blogs';
import { BlogConfig } from '@/shared/config/blog';

const translation = Astro.locals.translation;

const getPageUrl = (page: number) => {
	const urlBase = '/blog/';
	return page === 1 ? urlBase : urlBase + page + '/';
};

const { page = 1 } = Astro.params;
const pageSize = BlogConfig.pageSize;
const startIndex = (Number(page) - 1) * pageSize;
const endIndex = startIndex + pageSize;

const posts: TBlogMarkdownInstance[] = getSortedBlogs();
const paginatedPosts: TBlogMarkdownInstance[] = posts.slice(
	startIndex,
	endIndex
);
const pageCount = Math.ceil(posts.length / pageSize) || 1; // Default to 1, since there can't be 0 pages

const prevUrl: string | undefined =
	page === 1 ? undefined : getPageUrl(Number(page) - 1); // This is why I fu**ing hate js
const nextUrl: string | undefined =
	endIndex < posts.length ?
		getPageUrl(Number(page) + 1) // This as well
	:	undefined;

const title = `${BlogConfig.title}${
	Number(page) > 1
		? ` ${translation.pagination.pageWord} ${page}`
		: ''
	} - ${GlobalTranslation.siteName
}`;
const description = BlogConfig.description;
---

<Base head={{ title, description }}>
	<Section title={BlogConfig.title}>
		<div class="w-full text-center mt-2">
			{description}
		</div>
	</Section>

	<Section>
		<BlogGallery
			blogFileList={paginatedPosts}
			cutRemainder={false}
			client:only="react"
		/>
	</Section>

	<Section>
		<PaginationButtons
			currentPageText={`${translation.pagination.pageWord} ${page} / ${pageCount}`}
			prevHref={prevUrl}
			nextHref={nextUrl}
		/>
	</Section>
</Base>
