---
import { GlobalTranslation } from '@/locales/global';
import Base from '@/templates/Base.astro';
import { cGetUserLanguage, cSetUserLanguage } from '@/shared/cookies';
import { defaultLanguageCode, getTranslation } from '@/backend/i18n';
import { events_getEntry } from '@/backend/database/events';
import { events_getEventContent } from '@/backend/events';
import { marked } from 'marked';
import Section from '@/components/astro-components/Section.astro';
import { EventsPost } from '@/components/partials/EventsPost';

const { content: frontmatter } = Astro.props;

const translation = getTranslation(
	cGetUserLanguage(Astro) || defaultLanguageCode
);
if (!translation) {
	if (cGetUserLanguage(Astro) === null) {
		throw new Error('Could not load translations.');
	} else {
		cSetUserLanguage(null);
	}
}

// Fetch blog and parse to html
const eventId = Astro.originPathname.split('/').at(-2);
if (!eventId)
throw new Error("Couldn't fetch event page URL!");

const eventEntry = events_getEntry(eventId);
const eventPage = events_getEventContent(eventId);
if (!eventPage)
throw new Error('Couldn\'t fetch event page contents!');

const parsedContent = marked.parse(eventPage.content);

const title = `${eventEntry.title} - ${GlobalTranslation.siteName}`;
---

<Base
	head={{ title, description: frontmatter.description }}
	translation={translation}
>
	<Section>
		<EventsPost eventEntry={eventEntry}>
			<article set:html={parsedContent} />
		</EventsPost>
	</Section>
</Base>
