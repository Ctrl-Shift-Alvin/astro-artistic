<div
	id="loader"
	class="fixed inset-0 z-50 flex items-center justify-center transition-opacity opacity-100"
>
	<script>
		import { getFadeInOffsetMs } from '@/frontend/windowTools';
		document.getElementById('loader')?.classList.add(`duration-${getFadeInOffsetMs() ?? 1000}`);
	</script>
	<svg
		class="animate-spin"
		xmlns="http://www.w3.org/2000/svg"
		width="48"
		height="48"
		viewBox="0 0 24 24"
		fill="none"
		stroke="white"
		stroke-width="2"
		stroke-linecap="round"
		stroke-linejoin="round"
	>
		<circle
			class="opacity-25"
			cx="12"
			cy="12"
			r="10"
			stroke="currentColor"
			stroke-width="4"></circle>
		<path
			class="opacity-75"
			fill="currentColor"
			d="M4 12a8 8 0 018-8v4a4 4 0 00-4 4H4z"></path>
	</svg>
	<script> // Removes loader when the page is loaded

		import { getFadeInOffsetMs } from '@/frontend/windowTools';

		const loader = document.getElementById('loader');
		if (!loader) {
			throw new Error('Could not find \'loader\' element!');
		}

		window.loaderRemoved = false;
		window.removeLoader = () => {

			loader.classList.replace('opacity-100', 'opacity-0');
			loader.classList.add('pointer-events-none');
			setTimeout(
				() => loader.remove(),
				getFadeInOffsetMs()
			);

			window.removeEventListener('load', window.removeLoader!);

			window.loaderRemoved = true;
			window.removeLoader = undefined;

		};

		window.addEventListener('load', window.removeLoader);

		// Timeout loader in case of bug or whatever

		const LOADER_TIMEOUT_MS = 5000;
		setTimeout(() => {

			if (window.loaderRemoved === false) {

				console.error(`Loader timed out after ${LOADER_TIMEOUT_MS} seconds!`);
				window.removeLoader?.();

			}

		}, LOADER_TIMEOUT_MS);

	</script>
</div>