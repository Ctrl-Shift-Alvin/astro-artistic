---
import { Button } from '../elements/Button';
import { type TTranslation } from '@/locales/global';

export interface Props { translation: TTranslation }

const { translation } = Astro.props;
---

<div class="flex w-full flex-col items-center">
	<p class="mb-5 text-center text-lg">{translation.sizeError.body}</p>

	<Button
		actionPayload={{ action: 'sizeErrorIgnore' }}
		client:only="react"
	>
		{translation.sizeError.ignoreButton}
	</Button>

	<script>
		import { cGetIgnoreSizeError } from '@/shared/cookies';

		if (cGetIgnoreSizeError()) {

			// Make size-error-div invisible
			const errorDiv = document.getElementById('size-error-div');
			if (!errorDiv) throw new Error(`Cannot find 'size-error-div' in DOM!`);
			errorDiv.style.display = 'none';

		} else {

			const contentDiv = document.getElementById('content-div');
			const errorDiv = document.getElementById('size-error-div');
			if (!contentDiv) throw new Error(`Cannot find 'content-div' in DOM!`);
			if (!errorDiv) throw new Error(`Cannot find 'size-error-div' in DOM!`);
			const content = Array.from(contentDiv.children);

			const update = () => {

				if (cGetIgnoreSizeError() === true) {
					window.removeEventListener('resize', update);
				}

				if (window.innerWidth < 350 || window.innerHeight < 380) {

					content.forEach((item) => (item as HTMLElement).style.display = 'none');
					errorDiv.style.display = '';

				} else {

					content.forEach((item) => (item as HTMLElement).style.display = '');
					errorDiv.style.display = 'none';

				}

			};

			update();
			window.addEventListener('resize', update);

		}
	</script>
</div>
